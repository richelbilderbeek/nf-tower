import java.time.OffsetDateTime
import java.time.format.DateTimeFormatter

/*
 * Copyright (c) 2019, Seqera Labs.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This Source Code Form is "Incompatible With Secondary Licenses", as
 * defined by the Mozilla Public License, v. 2.0.
 */

plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.google.cloud.tools.jib" version "1.8.0"
    id "groovy"
    id "application"
}

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.3.3'
    }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly
    all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            if (details.requested.group == 'org.codehaus.groovy' && details.requested.version == '2.5.2') {
                details.useVersion '2.5.8'
            }
        }
    }
}


dependencies {
    implementation "io.micronaut:micronaut-runtime-groovy"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.micronaut:micronaut-http-server-netty"
    
    implementation "io.micronaut.configuration:micronaut-hibernate-gorm"
    runtime 'mysql:mysql-connector-java:8.0.16'
    runtime "com.h2database:h2:1.4.199"
    implementation 'de.ruedigermoeller:fst:2.57'
    implementation "javax.activation:activation:1.1.1"
    implementation "javax.mail:mail:1.4.7"
    implementation "org.jsoup:jsoup:1.11.2"
    implementation "org.apache.commons:commons-text:1.6"
    implementation "org.codehaus.groovy:groovy-json:2.5.8"
    implementation "org.codehaus.groovy:groovy-dateutil:2.5.8"
    implementation "org.codehaus.groovy:groovy-datetime:2.5.8"
    implementation "org.codehaus.groovy:groovy-templates:2.5.8"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.8"
    implementation "io.github.resilience4j:resilience4j-ratelimiter:0.17.0"
    implementation 'org.hashids:hashids:1.0.3'
    implementation 'com.devskiller.friendly-id:friendly-id:1.1.0'
    implementation 'com.google.guava:guava:21.0'

    compileOnly "io.micronaut:micronaut-inject-groovy"

    annotationProcessor "io.micronaut:micronaut-security"
    implementation "io.micronaut:micronaut-security"
    implementation "io.micronaut:micronaut-security-jwt"

    implementation "ch.qos.logback:logback-classic:1.2.3"

    implementation "io.swagger.core.v3:swagger-annotations"

    testCompileOnly "io.micronaut:micronaut-inject-groovy"
    testCompile("org.spockframework:spock-core") {
        exclude group: "org.codehaus.groovy"
    }
    testCompile "io.micronaut.test:micronaut-test-spock"

    testCompile "org.testcontainers:testcontainers:1.15.1"
    testCompile "org.testcontainers:spock:1.15.1"
    testCompile "org.subethamail:subethasmtp:3.1.7"
    testCompile 'net.bytebuddy:byte-buddy:1.9.12'
    testCompile "org.objenesis:objenesis:2.1"

    if (System.getProperty('os.name')=='Mac OS X') {
        // https://docs.micronaut.io/latest/guide/index.html#automaticRestart
        developmentOnly "io.micronaut:micronaut-runtime-osx"
        developmentOnly "net.java.dev.jna:jna"
        developmentOnly "io.methvin:directory-watcher"
    }
}

test.classpath += configurations.developmentOnly

mainClassName = "io.seqera.tower.Application"
tasks.withType(GroovyCompile) {
    groovyOptions.forkOptions.jvmArgs.add('-Dgroovy.parameters=true')
}

afterEvaluate {
    def info = """\
        name=${name}
        group=${group}
        version=${version}
        """.stripIndent().toString()
    def f = file("src/main/resources/META-INF/build-info.properties")
    f.parentFile.mkdir()
    f.text = info

    def app = file('src/main/groovy/io/seqera/tower/Application.groovy')
    app.text = app.text.replaceAll(/version ?= ?".+",/, "version = \"${version}\",")
}

//Only for the main (not test) source set
compileGroovy.groovyOptions.configurationScript = file('src/groovyCompile/groovycConfig.groovy')

//shadowJar {
//    mergeServiceFiles()
//}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')

//
// Build container image with JIB
// https://github.com/GoogleContainerTools/jib/tree/master/jib-gradle-plugin
//
jib.from.image = 'seqeralabs/nf-jdk:corretto-8u252'
jib.to.image = 'tower-backend:latest'
jib.container.creationTime = "${OffsetDateTime.now().format(DateTimeFormatter.ISO_DATE_TIME)}"
jib.container.filesModificationTime = "${OffsetDateTime.now().format(DateTimeFormatter.ISO_DATE_TIME)}"
jib.container.ports = ['8080']
jib.container.entrypoint = '/bin/sh'
jib.container.args = ['/tower.sh']  // copied from `src/main/jib` directory
jib.extraDirectories.permissions = [
        '/tower.sh': '755',
        '/wait-for-it.sh':'755' ]
